name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: corepack enable pnpm && pnpm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win

      - name: Upload Artifact for macOS
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-macos
          path: |
            dist/*.dmg
            dist/*.tar.gz
            dist/latest-mac.yml
          retention-days: 1

      - name: Upload Artifact for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.tar.gz
            dist/latest-linux.yml
          retention-days: 1

      # - name: Prepare and Upload Artifact for Windows
      #   if: matrix.os == 'windows-latest'
      #   run: mv release/latest.yml release/latest-windows.yml
      #   shell: bash

      - name: Upload Artifact for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.zip
            dist/latest.yml
          retention-days: 1

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
